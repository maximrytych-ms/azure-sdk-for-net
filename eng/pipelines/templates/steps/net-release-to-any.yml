parameters:
  DownloadArtifacts: false
  CreateGitTagAndRelease: false
  CopyFromPartnerDrops: false
  SignPackages: false
  PublishSymbols: false
  PublishToDevOpsFeed: false
  PublishArtifact: false
  PublishToNuget: false
  PublishToBlobFeed: false
  CopySignedFilesToBlob: false
  LinkToSignedPackages: false
  BuildToolsRepoPath: ''
  ArtifactsPath: ''
  DevOpsFeedId: ''
  BlobFeedUrl: ''
  PartnerDropsBlobPath: ''
  PartnerDropsStorageName: ''
  PartnerDropsContainerName: ''
  PartnerDropsBlobPrefix: ''
  PartnerDropsSubscription: ''
  SignedPackagesLink: ''
  NugetVersion: ''

steps:
  - ${{ if ne(parameters.BuildToolsRepoPath, '') }}:
    - template: tools/clone-buildtools/clone-buildtools.yml@azure-sdk-build-tools
      parameters:
        BuildToolsRepoPath: ${{ parameters.BuildToolsRepoPath }}

  - ${{ if eq(parameters.DownloadArtifacts, 'true') }}:
    - download: none # Disable the automatic downloading so that we can download ourselves to the location we want.
    - task: DownloadPipelineArtifact@2
      displayName: Download Packages
      inputs:
        artifact: packages
        path: ${{ parameters.ArtifactsPath }}
      condition: and(succeeded(), ne(variables['SkipDownloadArtifacts'], 'true'))

  - ${{ if eq(parameters.CopyFromPartnerDrops, 'true') }}:
    - task: PowerShell@2
      displayName: 'Copy from AzureSdkPartnerDrops'
      inputs:
        targetType: filePath
        filePath: '${{ parameters.BuildToolsRepoPath }}/scripts/copy-from-azuresdkpartnerdrops.ps1'
        arguments: >
          -downloadDir ${{ parameters.ArtifactsPath }}
          -blobPath ${{ parameters.PartnerDropsBlobPath }}
          -blobKey $(azuresdkpartnerdrops-access-key)
      condition: and(succeeded(), ne(variables['SkipCopyFromPartnerDrops'], 'true'))

  - ${{ if eq(parameters.CreateGitTagAndRelease, 'true') }}:
    - task: PowerShell@2
      displayName: 'Verify Package Tags and Create Git Releases'
      inputs:
        targetType: filePath
        filePath: '$(Build.SourcesDirectory)/eng/common/scripts/create-tags-and-git-release.ps1'
        arguments: >
          -artifactLocation ${{ parameters.ArtifactsPath }}
          -workingDirectory $(System.DefaultWorkingDirectory)
          -packageRepository Nuget
          -releaseSha $(Build.SourceVersion)
          -repoId $(Build.Repository.Id)
      env:
        GH_TOKEN: $(azuresdk-github-pat)
      condition: and(succeeded(), ne(variables['SkipCreateGitTagAndRelease'], 'true'))

  - ${{ if eq(parameters.SignPackages, 'true') }}:
    - template: pipelines/steps/net-signing.yml@azure-sdk-build-tools
      parameters:
        PackagesPath: ${{ parameters.ArtifactsPath }}
        BuildToolsPath: ${{ parameters.BuildToolsRepoPath }}

  - ${{ if eq(parameters.PublishSymbols, 'true') }}:
    - task: MSBuild@1
      displayName: 'Upload Symbols'
      inputs:
        solution: '${{ parameters.BuildToolsRepoPath }}/tools/symboltool/SymbolUploader.proj'
        msbuildArguments: >
          /p:PackagesPath=${{ parameters.ArtifactsPath }}
          /p:MSPublicSymbolsPAT=$(azuresdk-microsoftpublicsymbols-devops-pat)
          /p:MSSymbolsPAT=$(azuresdk-microsoft-devops-pat)
          /p:AzureSDKSymbolsPAT=$(azuresdk-azure-sdk-devops-pat)
      condition: and(succeeded(), ne(variables['SkipPublishSymbols'], 'true'))

  - ${{ if ne(parameters.NugetVersion, '') }}:
    - task: NuGetToolInstaller@1
      displayName: 'Use NuGet ${{ parameters.NugetVersion }}'
      inputs:
        versionSpec: ${{ parameters.NugetVersion }}

  - ${{ if eq(parameters.PublishToNuget, 'true') }}:
    - task: NuGetCommand@2
      displayName: 'Publish to Nuget'
      inputs:
        command: push
        packagesToPush: '${{ parameters.ArtifactsPath }}/**/*.nupkg;!${{ parameters.ArtifactsPath }}/**/*.symbols.nupkg'
        nuGetFeedType: external
        publishFeedCredentials: Nuget.org
      condition: and(succeeded(), ne(variables['SkipPublishToNuget'], 'true'))

  - ${{ if eq(parameters.PublishToBlobFeed, 'true') }}:
    - task: MSBuild@1
      displayName: 'Publish to blobfeed'
      inputs:
        solution: '${{ parameters.BuildToolsRepoPath }}/tools/blobfeedtool/BlobFeedPublishHelper.proj'
        msbuildArguments: >
          /p:AccountKey=$(azuresdkartifacts-access-key)
          /p:ExpectedFeedUrl=${{ parameters.BlobFeedUrl }}
          /p:PackagesPath=${{ parameters.ArtifactsPath }}
      condition: and(succeeded(), ne(variables['SkipPublishToBlobFeed'], 'true'))

  - ${{ if eq(parameters.PublishToDevOpsFeed, 'true') }}:
    - task: NuGetCommand@2
      displayName: 'Publish to DevOps Feed'
      inputs:
        command: push
        packagesToPush: '${{ parameters.ArtifactsPath }}/*.nupkg;!${{ parameters.ArtifactsPath }}/*.symbols.nupkg'
        publishVstsFeed: ${{ parameters.DevOpsFeedID }}
      condition: and(succeeded(), ne(variables['SkipPublishToDevOpdFeed'], 'true'))

  - ${{ if eq(parameters.CopySignedFilesToBlob, 'true') }}:
    - task: AzureFileCopy@2
      displayName: 'Copy Signed Files to Blob'
      inputs:
        SourcePath: '${{ parameters.ArtifactsPath }}'
        azureSubscription: '${{ parameters.PartnerDropsSubscription }}'
        Destination: AzureBlob
        storage: '${{ parameters.PartnerDropsStorageName }}'
        ContainerName: '${{ parameters.PartnerDropsContainerName }}'
        BlobPrefix: '${{ parameters.PartnerDropsBlobPrefix }}'
      condition: and(succeeded(), ne(variables['SkipCopySignedFilestoBlob'], 'true'))

  - ${{ if eq(parameters.PublishArtifact, 'true') }}:
    - publish: ${{ parameters.ArtifactsPath }}
      displayName: 'Publish processed files'
      artifact: processed-files
      condition: always()